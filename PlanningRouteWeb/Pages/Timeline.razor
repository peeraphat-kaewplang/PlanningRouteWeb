@page "/Timeline-ORG"
@inject IJSRuntime JSRuntime
@inject ITimelineService TimelineService
@inject IPlanningService PlanningService
@inject StateContainer StateContainer
<div class="d-flex align-items-center gap-2 pb-2 w-100">
    <div class="col-auto">
        <input @bind="isView" class="form-check-input" type="checkbox">
        <label class="form-check-label" for="checkView">
            มุมมองจำนวนเงิน
        </label>
    </div>
    @* <div class="col-auto">
        <label for="organize" class="col-form-label">สาขา</label>
    </div>
    <div class="col-auto">
        <select @bind="selectOrg" class=" form-select form-select-sm">
            @foreach (var org in optionsOrg)
            {
                <option value="@org.ORGANIZATION_CODE">@org.ORGANIZATION_NAME</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <label for="route" class="col-form-label">Route</label>
    </div>
    <div class="col-auto">
        <select @bind="selectRoute" class=" form-select form-select-sm">
            @foreach (var route in optionsRoute)
            {
                <option value="@route.ROUTE_CODE">@route.ROUTE_NAME</option>
            }
        </select>
    </div> *@
    <div class="col-auto">
        <label for="dateStart" class="col-form-label">From</label>
    </div>
    <div class="col-auto">
        <input id="dateStart" class="form-control form-control-sm">
    </div>
    <div class="col-auto">
        <label for="dateEnd" class="col-form-label">To</label>
    </div>
    <div class="col-auto">
        <input id="dateEnd" class="form-control form-control-sm">
    </div>
    <button class="btn btn-primary btn-sm" data-bs-toggle="tooltip"
            data-bs-placement="right" title="ค้าหา">
        <i class="fa-solid fa-magnifying-glass fa-xs"></i>
    </button>
</div>

<div>
    <table class="table table-bordered table-sm table-striped table-hover align-middle border-start border-end mb-0">
        <thead>
            <tr>
                <th class="">สาขา / Time</th>
                @foreach(var model in column)
                {
                    <th class="text-center">@model</th>
                }
                <th class=""></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var model in timelineData)
            {
                <tr>
                    <td >
                        <div class="d-flex align-items-center">
                            <div class="w-25">@model.ORGANIZATION_CODE</div>
                            <div class="w-75 progress" role="progressbar" aria-label="Success example">
                                <div class="progress-bar bg-success" style="width: 25%">@($"{model.NUM_SERVICE}/{model.MAX_DROP}")</div>
                            </div>
                        </div>
                    </td>
                    <td class="text-center">@model.T01</td>
                    <td class="text-center">@model.T02</td>
                    <td class="text-center">@model.T03</td>
                    <td class="text-center">@model.T04</td>
                    <td class="text-center">@model.T05</td>
                    <td class="text-center">@model.T06</td>
                    <td class="text-center">@model.T07</td>
                    <td class="text-center">@model.T08</td>
                    <td class="text-center">@model.T09</td>
                    <td class="text-center">@model.T10</td>
                    <td class="text-center">@model.T11</td>
                    <td class="text-center">@model.T12</td>
                    <td class="text-center">@model.T13</td>
                    <td class="text-center">@model.T14</td>
                    <td class="text-center">@model.T15</td>
                    <td class="text-center">@model.T16</td>
                    <td class="text-center">@model.T17</td>
                    <td class="text-center">@model.T18</td>
                    <td class="text-center">@model.T19</td>
                    <td class="text-center">@model.T20</td>
                    <td class="text-center">@model.T21</td>
                    <td class="text-center">@model.T22</td>
                    <td class="text-center">@model.T23</td>
                    <td class="text-center">@model.T24</td>
                    <td class="text-center">
                        <button 
                                type="button" class="btn btn-primary btn-sm">
                            <i class="fa-solid fa-eye fa-xs"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<script>
    let option = {
        language: 'th',
        format: 'dd/mm/yyyy',
        autoclose: true,
        weekStart: 1,
        calendarWeeks: true,
        todayHighlight: true,
    }
    $(document).ready(function () {
        $('#dateStart').datepicker(option).on('changeDate', function () {
            var temp = $(this).datepicker('getDate');
            var d = new Date(temp);
            d.setDate(d.getDate() + 1);
            $('#dateEnd').datepicker({
                ...option ,
                startDate: d
            }).on('changeDate', function () {
                var temp1 = $(this).datepicker('getDate');
                var d1 = new Date(temp1);
                d1.setDate(d1.getDate() + 1);
            });
        });
    });

    
</script>

@code {
    public List<TimeLineOrgData> timelineData { get; set; } = new();
    public IEnumerable<OrganizationData> optionsOrg = new List<OrganizationData>();
    public IEnumerable<PlanningRouteWeb.Models.RouteData> optionsRoute = new List<PlanningRouteWeb.Models.RouteData>();
    public List<string> column = new List<string> { "01", "02" , "03" , "04", "05" , "06" , "07" , "08" , "09" , "10" , "11" , "12" ,"13" , "14" , "15" , "16" , "17" , "18" , "19" , "20" , "21" , "22" , "23" , "24"};
    public string? systems { get; set; }
    public string? selectOrg { get; set; }
    public string? selectRoute { get; set; }
    public bool isView { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            StateContainer.IsLoading = true;
            var systems = await JSRuntime.InvokeAsync<List<string>>("getSystems");
            selectOrg = systems[0];
            await LoadOrg();
            await LoadRoute();
            var (error, timeline) = await TimelineService.GetTimeLine();
            if (error.Error)
            {
                // await CommonService.ShowAlert(new ToastModel
                //     {
                //         action = "error",
                //         messang = error.ErrorMessage
                //     });
            }
            else
            {
                timelineData = timeline;
            }
            StateContainer.IsLoading = false;
            StateHasChanged();
        }
    }


    public async Task LoadOrg(string org = "")
    {
        var req = new OrganizationRequest { ORG = org };
        var res = await PlanningService.PlanningGetORG(req);
        optionsOrg = res!.Data;
    }

    public async Task LoadRoute()
    {
        var req = new OrganizationRequest { ORG = $"{selectOrg}" };
        var res = await PlanningService.PlanningGetRoute(req);
        optionsRoute = res!.Data;
    }
}
