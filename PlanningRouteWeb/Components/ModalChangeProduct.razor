@using System.Reflection;
<div class="row">
    <div class="col-3">
        <p>ตู้ : @header.MACHINE_CODE</p>
    </div>
    <div class="col-3">
        <p>รหัสสาขา : @header.ORGANIZATION_CODE</p>
    </div>
    <div class="col-3">
        <p>ประเภทตู้ : @header.MACHINE_TYPE</p>
    </div>
    <div class="col-3">
        <p>ชื่อประเภทตู้ : @header.MACHINE_TYPE_NAME</p>
    </div>
</div>
<div class="row">
    <div class="col-3">
        <p>โมเดลตู้ : @header.MACHINE_MODEL</p>
    </div>
    <div class="col-3">
        <p>ตู้ @(header.TYPE_METER == "2" ? "1:1" : "กลุ่ม")</p>
    </div>
    <div class="col-3">
        <p>@(header.ISONLINE == "1" ? "ออนไลน์" : "ออฟไลน์")</p>
    </div>
    <div class="col-3">
        <p>วันที่ : @Item.ChangeDate</p>
    </div>
</div>
<div id="table-scroll" class="table-scroll mb-2">

    @if (header.TYPE_METER == "2")
    {
        <table class="table table-hover table-sm table-bordered">
            <thead>
                <tr>
                    <th style="font-size: 12px;">ช่องสินค้า</th>
                    <th style="font-size: 12px;">ประเภทกลุ่มสินค้า</th>
                    <th style="font-size: 12px;">ชื่อสินค้า</th>
                    <th style="font-size: 12px;">ยอดโหลด</th>
                    <th style="font-size: 12px;">ยอดขายเฉลี่ย</th>
                    <th style="font-size: 12px;">ราคากลาง</th>
                    <th style="font-size: 12px;">ราคาขาย</th>
                    <th style="font-size: 12px;">ราคาเรียกเก็บ</th>
                    <th style="font-size: 12px;">ราคาตามสัญญา</th>
                    @if(IsCurrent)
                    {
                        <th style="font-size: 12px;" colspan="3"></th>
                    }
                </tr>
            </thead>
            <tbody>
                    @foreach (var (i, idx) in detail.WithIndex())
                    {
                        var tableColorRow = i.IsStatusChange && !i.STATUSCHANGE && !i.IsAddSlot ? "table-secondary text-close" :
                                            !i.IsStatusChange && i.STATUSCHANGE && i.IsAddSlot ? "table-success" :
                                            i.IsStatusChange && i.STATUSCHANGE && !i.IsAddSlot ? "table-primary" :
                                            null;
                        <tr class=@($"{tableColorRow}") >
                            <td class="text-end" style="font-size: 12px;width: 3rem;">
                                @(i.SLOT_NO == 0 ? "" : i.SLOT_NO)
                            </td>

                            @if (SelectRowEdit == idx)
                            {
                                <td style="width:10rem;">
                                        <RadzenDropDown class="dropdown-sm fw-bold w-100"
                                                        TValue="string"
                                                        Data=@product
                                                        TextProperty="RAWPRODUCTNAME"
                                                        ValueProperty="RAWPRODUCTCODE"
                                                        @bind-Value=@i.RAWPRODUCTCODE
                                                        Change="@(args => actionButton = false)" />
                                </td>
                                <td style="width:30rem;">
                                        <DropDownProductDt index="@idx"
                                                           ItemModal="@Item"
                                                           RawProductCode="@i.RAWPRODUCTCODE"
                                                           ProductCode="@i.PRODUCT_CODE"
                                                           SelectDetailCallback="@((args) => SelectDetail(i,args.Item1, idx))" />
                                </td>
                            <td class="text-end" style="width:3rem;font-size: 12px;">
                                @{
                                    var prd = detail[idx - 1].PRODUCT_CODE == i.PRODUCT_CODE;
                                }
                                @if(i.IsAddSlot || prd)
                                {
                                    @i.LOADIN
                                }
                                else
                                {
                                    var validat = i.LOADIN == 0 ? "validat" : null;
                                    <RadzenNumeric class=@($"text-size {validat}")
                                                   ShowUpDown="false"
                                                   TextAlign="TextAlign.End"
                                                   TValue="int"
                                                   @bind-Value=@i.LOADIN
                                                   @oninput=@(args => OnChangeNumber(args , i , "LOADIN")) />
                                }
                                </td>
                            }
                            else
                            {
                                var rawProductName = product.FirstOrDefault(x => x.RAWPRODUCTCODE == i.RAWPRODUCTCODE);
                                <td style="width:10rem;">
                                    <div style="font-size: 12px;">
                                        @rawProductName!.RAWPRODUCTNAME
                                    </div>
                                </td>
                                <td style="width:30rem;">
                                    <div style="font-size: 12px;">
                                        @i.PRODUCT_NAME
                                    </div>
                                </td>
                                <td style="width:3rem;">
                                    <div class="text-end" style="font-size: 12px;">
                                        @i.LOADIN
                                    </div>
                                </td>
                            }
                            <td class="text-end" style="font-size: 12px;width:5rem;">@(string.IsNullOrWhiteSpace(i.SALETOTAL) ? "0" : i.SALETOTAL)</td>
                            <td class="text-end" style="font-size: 12px;width:3rem;">@i.SALEPRICE</td>

                            <td class="text-end" style="font-size: 12px;width:3rem;">
                                @if (SelectRowEdit == idx)
                                {
                                    var validat = i.SLOT_REALPRICE == 0 ? "validat" : null;
                                    <RadzenNumeric class=@($"text-size {validat}")
                                                   ShowUpDown="false"
                                                   TextAlign="TextAlign.End"
                                                   TValue="int"
                                                   @bind-Value=@i.SLOT_REALPRICE
                                                   @oninput=@(args => OnChangeNumber(args , i ,"SLOT_REALPRICE")) />
                                }
                                else
                                {
                                    @i.SLOT_REALPRICE
                                }
                            </td>

                            <td style="width:3rem;">
                                <div class="text-end" style="font-size: 12px">
                                    @if (SelectRowEdit == idx)
                                    {
                                        var validat = i.SLOT_INSTALLPRICE == 0 ? "validat" : null;
                                        <RadzenNumeric class=@($"text-size {validat}")
                                                       ShowUpDown="false"
                                                       TextAlign="TextAlign.End"
                                                       TValue="int"
                                                       @bind-Value=@i.SLOT_INSTALLPRICE
                                                       @oninput=@(args => OnChangeNumber(args , i , "SLOT_INSTALLPRICE")) />
                                    }
                                    else
                                    {
                                        @i.SLOT_INSTALLPRICE
                                    }
                                </div>
                            </td>
                            <td style="width:3rem;">
                                <div class="text-end" style="font-size: 12px;">
                                    @if (SelectRowEdit == idx)
                                    {
                                        var validat = i.SLOT_CONTRACT_PRICE == 0 ? "validat" : null;
                                        <RadzenNumeric class=@($"text-size {validat}")
                                                       ShowUpDown="false"
                                                       TextAlign="TextAlign.End"
                                                       TValue="int"
                                                       @bind-Value=@i.SLOT_CONTRACT_PRICE
                                                       @oninput=@(args => OnChangeNumber(args, i , "SLOT_CONTRACT_PRICE")) />
                                    }
                                    else
                                    {
                                        @i.SLOT_CONTRACT_PRICE
                                    }
                                </div>
                            </td>
                            @if(IsCurrent){
                            @if (i.IsStatusChange && !i.STATUSCHANGE && !i.IsAddSlot)
                            {
                                <td style="width:6.25rem;">
                                    <div ></div>
                                </td>
                                <td class="text-center" style="width:2rem;">
                                    <div >
                                        @if ((idx < detail.Count() - 1 && detail[idx + 1].SLOT_NO - i.SLOT_NO > 1 && SelectRowEdit != idx) || (FindRowLastIndex(idx, i)))
                                        {
                                            <RadzenButton Click="()=> AddSlot(idx, i)"
                                                          Icon="add"
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Size="ButtonSize.ExtraSmall" 
                                                          />
                                        }
                                    </div>
                                </td>
                                <td style="width:2rem;">
                                    <div ></div>
                                </td>
                            }
                            else
                            {
                                <td class="text-center" style="font-size: 12px;width:6.25rem;">
                                    <div class="d-flex justify-content-around" >
                                        @if (SelectRowEdit != idx)
                                        {
                                            @if (i.IsAddSlot || i.STATUSCHANGE)
                                            {
                                                <RadzenButton Click=@(() => SelectRowEdit = idx)
                                                              Text="แก้ไข"
                                                              ButtonStyle="ButtonStyle.Warning"
                                                              Size="ButtonSize.ExtraSmall"
                                                              Style="text-transform: none;"
                                                              Disabled=@(!i.SLOTSTATUS || SelectRowEdit != null) />
                                            }
                                            else
                                            {
                                                <RadzenButton Click="()=>ChangeProduct(idx , i)"
                                                              Text="เปลี่ยนสินค้า"
                                                              ButtonStyle="ButtonStyle.Secondary"
                                                              Size="ButtonSize.ExtraSmall"
                                                              Style="text-transform: none;"
                                                              Disabled=@(!i.SLOTSTATUS || SelectRowEdit != null) />
                                            }
                                        }
                                        else
                                        {
                                            var prd = detail[idx - 1].PRODUCT_CODE == i.PRODUCT_CODE;
                                            var disble = i.IsAddSlot ? i.SLOT_REALPRICE != 0 && i.SLOT_INSTALLPRICE != 0 && i.SLOT_CONTRACT_PRICE != 0 ? false : true :
                                                         prd ? i.SLOT_REALPRICE != 0 && i.SLOT_INSTALLPRICE != 0 && i.SLOT_CONTRACT_PRICE != 0 ? false : true :
                                                         i.LOADIN != 0 && i.SLOT_REALPRICE != 0 && i.SLOT_INSTALLPRICE != 0 && i.SLOT_CONTRACT_PRICE != 0 ? false : true;


                                           <RadzenButton Click="()=>SaveRowChange(i)"
                                                          Text="บันทึก"
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Size="ButtonSize.ExtraSmall"
                                                          Style="text-transform: none;"
                                                          Disabled=@(disble) />
                                        }
                                    </div>
                                </td>
                                <td class="text-center" style="font-size: 12px;width:2rem;">
                                    <div>
                                        @if ((idx < detail.Count() - 1 && detail[idx + 1].SLOT_NO - i.SLOT_NO > 1 && SelectRowEdit != idx) || FindRowLastIndex(idx, i))
                                        {
                                            <RadzenButton Click="()=> AddSlot(idx, i)"
                                                          Icon="add"
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Size="ButtonSize.ExtraSmall"
                                                           />
                                        }
                                    </div>
                                </td>
                                <td style="font-size: 12px;width:2rem;">
                                    <div >
                                    @{
                                        var delete =  i.IsSave ? false : true;
                                        var text = !i.IsSave ? "del" :
                                                   i.SLOTSTATUS ? "off" : "on";
                                    }
                                        <RadzenButton Click="()=> OptionRow(i , delete)"
                                                      Text=@(text)
                                                      Shade=@(i.IsAddSlot ? Shade.Default : Shade.Light)
                                                      ButtonStyle=@(i.SLOTSTATUS ? ButtonStyle.Danger : ButtonStyle.Success)
                                                      Size="ButtonSize.ExtraSmall"
                                                      Style="text-transform: none;"
                                                      />
                                    </div>
                                </td>
                            }
                            }
                        </tr>
                    }
            </tbody>
        </table>
    }
    else
    {
         <table class="table table-sm">
            <thead>
                <tr>
                    <th style="font-size: 12px;width:100px;">ช่องสินค้า</th>
                    <th style="font-size: 12px;">ประเภทกลุ่มสินค้า</th>
                    <th style="font-size: 12px;">ชื่อสินค้า</th>
                    <th style="font-size: 12px;width:100px;">ยอดโหลด</th>
                    @*<th style="font-size: 12px;width:100px;">ยอดขายเฉลี่ย</th>
                     <th style="font-size: 12px;width:100px;">ราคากลาง</th>
                    <th style="font-size: 12px;width:100px;">ราคาขาย</th>
                    <th style="font-size: 12px;width:100px;">ราคาเรียกเก็บ</th>
                <th style="font-size: 12px;width:100px;">ราคาตามสัญญา</th>*@
                    <th style="font-size: 12px;width:200px;" colspan="3">command</th>
                </tr>
            </thead>
            <tbody>
                    @foreach (var i in GroupDetail())
                    {
                         <tr>
                            <td rowspan='2'>@i.SLOT_NO</td>
                            <td rowspan='2'>@i.SLOT_REALPRICE</td>
                         
                            <td>PCMB (Engg and Medical) 2015</td>
                            <td>21-09-2015</td>
                            <td rowspan='2'><button class="btn btn-primary align-middle">Login</button></td>
                         </tr>
                         <tr>
                            <td>PCMB (Engg and Medical) 2016</td>
                            <td>21-09-2016</td>
                         </tr>
                    }
            </tbody>
         </table>
    }
</div>

<RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
    @if(IsCurrent)
    {
        <RadzenStack Orientation="Orientation.Horizontal">
            <RadzenButton 
                Click="()=> SaveChangeProduct(0)" 
                Text="บันทึก" 
                Style="width: 80px;text-transform: none;" 
                Disabled=@(SelectRowEdit != null)/>
            <RadzenButton 
                Shade="Shade.Lighter" 
                ButtonStyle="ButtonStyle.Light" 
                Click="()=> SaveChangeProduct(1)" 
                Text="ยกเลิกการเปลี่ยนสินค้า" 
                Style="width: 200px;text-transform: none;" 
                Disabled=@(SelectRowEdit != null)/>
        </RadzenStack>
        <RadzenButton Text="ปิด" Click="(() => Dialog!.Close(false))" ButtonStyle="ButtonStyle.Light" Style="text-transform: none;" />
    }
</RadzenStack>

@inject IChangeProductService ChangeProductService
@inject IDialogService DialogServiceCustom
@code {
    [Parameter]
    public ChangeProductRequest Item { get; set; } = new();
    [Parameter]
    public DialogService? Dialog { get; set; }
    [Parameter]
    public bool IsCurrent { get; set; }

    public int? SelectRowEdit = null;
    public bool actionButton=true;

    ChangeProductHeader header = new();
    List<ChangeProductDetail2> detail = new();
    List<Rawproduct> product = new();

    // Default row
    // IsStatusChange = false,
    // STATUSCHANGE = false,
    // IsAddSlot = false,

    // Change Product
    // เเถวใหม่
    // IsStatusChange = true,
    // STATUSCHANGE = true,
    // IsAddSlot = false,
    // แถวเก่า
    // IsStatusChange = true,
    // STATUSCHANGE = false,
    // IsAddSlot = false,

    // Add row
    // IsStatusChange = false,  
    // STATUSCHANGE = true,
    // IsAddSlot = true,

    protected override async Task OnInitializedAsync()
    {
        await LoadDataChangeProduct();
    }

    private async Task LoadDataChangeProduct()
    {
        var body = new RawproductRequest { RawProductCode = "" };
        var res = await ChangeProductService.GetChangeProduct(Item);
        var resProduct = await ChangeProductService.GetRawproduct(body);

        header = res.Header;
        detail = res.Detail;
        product = resProduct.Data;
        StateHasChanged();
    }

    private void SelectDetail(ChangeProductDetail2 item ,RawproductDetail2 selectProduct , int index)
    {
        var realprice = detail.Where((x ,i) => x.PRODUCT_CODE == selectProduct.PRODUCTCODE && x.STATUSCHANGE && index != i);

        if (realprice.Count() == 0)
        {
            realprice = detail.Where((x, i) => x.PRODUCT_CODE == selectProduct.PRODUCTCODE && !x.STATUSCHANGE && index != i);
        }

        item.PRODUCT_CODE = selectProduct.PRODUCTCODE;
        item.PRODUCT_NAME = selectProduct.PRODUCTNAME;
        item.SALETOTAL = selectProduct.SALETOTAL;
        item.SALEPRICE = selectProduct.SALEPRICE;
        item.SLOT_REALPRICE = realprice.Count() > 0 ? realprice.First().SLOT_REALPRICE : 0;
        item.SLOT_INSTALLPRICE = realprice.Count() > 0 ? realprice.First().SLOT_INSTALLPRICE : 0;
        item.SLOT_CONTRACT_PRICE = realprice.Count() > 0 ? realprice.First().SLOT_CONTRACT_PRICE : 0;
        item.LOADIN = 0;
        // actionButton = false;
        StateHasChanged();
    }

    private void OptionRow(ChangeProductDetail2 item , bool delete = false)
    {
        if(delete)
        {
            if (item.STATUSCHANGE)
            {
                var record = detail.Find(x => x.SLOT_NO == item.SLOT_NO && !x.STATUSCHANGE);
                if(record != null)
                {
                    record.STATUSCHANGE = false;
                    record.IsStatusChange = false;
                    record.IsAddSlot = false;
                }
            }
            detail.Remove(item);
            SelectRowEdit = null;
        }
        else
        {
            // off row
            item.SLOTSTATUS = !item.SLOTSTATUS;
        }
        StateHasChanged();
    }

    private void SaveRowChange(ChangeProductDetail2 productChang)
    {
        // ราคาสินค้าตัวเดียวกันต้องเท่ากับราคาสินค้าตัวที่เปลี่ยน

        // หาสินค้าที่เหมือนกับสินค้าที่เปลี่ยนทั้งหมดในตู้
        var products = detail.Where(x => x.PRODUCT_CODE == productChang.PRODUCT_CODE && productChang.SLOT_NO != x.SLOT_NO);
        if (products.Count() != 0)
        {
            foreach (var i in products.ToList())
            {
                // check change product
                var change = detail.FindLast(x => x.SLOT_NO == i.SLOT_NO);
                var changeIdx = detail.FindLastIndex(x => x.SLOT_NO == i.SLOT_NO);
                if (!change!.STATUSCHANGE && change.SLOT_REALPRICE != productChang.SLOT_REALPRICE)
                {
                    // add row change product
                    ChangeProductDetail2 newPrice = new ChangeProductDetail2
                    {
                        SLOT_REALPRICE = productChang.SLOT_REALPRICE,
                        SLOT_INSTALLPRICE = productChang.SLOT_INSTALLPRICE,
                        SLOT_CONTRACT_PRICE = productChang.SLOT_CONTRACT_PRICE
                    };
                    ChangeProduct(changeIdx , change , newPrice , false);
                }
                else
                {
                    change.SLOT_REALPRICE = productChang.SLOT_REALPRICE;
                }

                // var idx = detail.FindIndex(x => x.SLOT_NO == i.SLOT_NO);
                // detail[idx].SLOT_REALPRICE = productChang.SLOT_REALPRICE;
            }
        }

        SelectRowEdit = null;
        actionButton = true;
        StateHasChanged();
    }

    private void AddSlot(int index, ChangeProductDetail2 item)
    {
        var last = detail.FindLast(x => x.SLOT_NO == item.SLOT_NO);
        var lastIdx = detail.FindLastIndex(x => x.SLOT_NO == item.SLOT_NO);
        var idx = lastIdx == detail.Count() - 1 && last!.STATUSCHANGE ? index + 2 : index + 1;

        detail.Insert(idx, new ChangeProductDetail2
            {
                MACHINE_CODE = item.MACHINE_CODE,
                SLOT_NO = item.SLOT_NO + 1,
                RAWPRODUCTCODE = item.RAWPRODUCTCODE,
                PRODUCT_CODE = item.PRODUCT_CODE,
                PRODUCT_NAME = item.PRODUCT_NAME,
                SLOT_INSTALLPRICE = item.SLOT_INSTALLPRICE,
                SLOT_REALPRICE = item.SLOT_REALPRICE,
                SLOT_CONTRACT_PRICE = item.SLOT_CONTRACT_PRICE,
                SLOTSTATUS = item.SLOTSTATUS,
                SALEPRICE = item.SALEPRICE,
                SALETOTAL = item.SALETOTAL,
                IsStatusChange = false,
                STATUSCHANGE = true,
                IsAddSlot = true,
            });

        StateHasChanged();
    }

    private void ChangeProduct(int index, ChangeProductDetail2 item, ChangeProductDetail2? newPrice = null , bool selectRow = true)
    {
        item.IsStatusChange = true;
        item.STATUSCHANGE = false;

        // if (newPrice != null)
        // {
        //     item.SLOT_REALPRICE = newPrice.SLOT_REALPRICE;
        //     item.SLOT_INSTALLPRICE = newPrice.SLOT_INSTALLPRICE;
        //     item.SLOT_CONTRACT_PRICE = newPrice.SLOT_CONTRACT_PRICE;
        // }

        detail.Insert(index + 1, 
            new ChangeProductDetail2
            {
                MACHINE_CODE = item.MACHINE_CODE,
                SLOT_NO = item.SLOT_NO,
                RAWPRODUCTCODE = item.RAWPRODUCTCODE,
                PRODUCT_CODE = item.PRODUCT_CODE,
                PRODUCT_NAME = item.PRODUCT_NAME,
                SALETOTAL = item.SALETOTAL,
                SLOT_INSTALLPRICE = newPrice != null ? newPrice.SLOT_INSTALLPRICE : item.SLOT_INSTALLPRICE,
                SLOT_REALPRICE = newPrice != null ? newPrice.SLOT_REALPRICE : item.SLOT_REALPRICE,
                SLOT_CONTRACT_PRICE = newPrice != null ? newPrice.SLOT_CONTRACT_PRICE : item.SLOT_CONTRACT_PRICE,
                SLOTSTATUS = item.SLOTSTATUS,
                SALEPRICE = item.SALEPRICE,
                IsStatusChange = true,
                STATUSCHANGE = true,
                IsAddSlot = false,
            });

        if (selectRow) SelectRowEdit = index + 1;

        StateHasChanged();
    }

    private async Task DialogLoading()
    {
        var task = InvokeAsync(async () =>
        {
            await LoadDataChangeProduct();
            await Task.Delay(1500);
            DialogServiceCustom.DialogClose();
        });
        await DialogServiceCustom.BusyDialog("กำลังบันทึกข้อมูลดข้อมูล...");
    }

    private async Task SaveChangeProduct(int cancel)
    {
        var data = new SaveChangeProductRequest
        {
            ORG = Item.ORG,
            Location = Item.Location,
            Machine = Item.Machine,
            ChangeDate = Item.ChangeDate,
            Cancel = cancel.ToString(),
            Data = detail.Select(x => ConvertModel.SaveChangeProductDataModel(x)).ToList() 
        };

        var response = await ChangeProductService.SaveChangeProduct(data);
        if (response.ErrorMessage == "success")
        {
            await DialogLoading();
        }
    }

    private List<ChangeProductGroup> GroupDetail()
    {
        var data = detail.GroupBy(x => new { x.SLOT_NO, x.SLOT_REALPRICE })
                        .Select(g => new ChangeProductGroup
                        {
                            SLOT_NO = g.Key.SLOT_NO.ToString() , 
                            SLOT_REALPRICE = g.Key.SLOT_REALPRICE.ToString(),
                            Products = g.ToList()
                        }).ToList();
        return data;
    }

    private bool FindRowLastIndex(int index,ChangeProductDetail2 item)
    {
        // เช็คว่า slot สุดท้ายมีการเปลี่ยนสินค้าหรือไม่
        var last = detail.FindLast(x => x.SLOT_NO == detail.Last().SLOT_NO);
        var lastIdx = detail.FindLastIndex(x => x.SLOT_NO == detail.Last().SLOT_NO);

        return index == (last!.STATUSCHANGE && !last.IsAddSlot? lastIdx - 1 : lastIdx);
    }

    private void OnChangeNumber(ChangeEventArgs arg, ChangeProductDetail2 item , string field)
    {
        var str = $"{arg.Value}";
        var value = !string.IsNullOrEmpty(str) ? int.Parse(str) : 0;
        Type type = typeof(ChangeProductDetail2);
        ChangeProductDetail2 obj = item;
        PropertyInfo objField = type.GetProperty(field)!;
        objField.SetValue(obj, value);
    }
}
