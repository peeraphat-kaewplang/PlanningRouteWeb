<div class="row">
    <div class="col-3">
        <p>ตู้ : @header.MACHINE_CODE</p>
    </div>
    <div class="col-3">
        <p>รหัสสาขา : @header.ORGANIZATION_CODE</p>
    </div>
    <div class="col-3">
        <p>ประเภทตู้ : @header.MACHINE_TYPE</p>
    </div>
    <div class="col-3">
        <p>ชื่อประเภทตู้ : @header.MACHINE_TYPE_NAME</p>
    </div>
</div>
<div class="row">
    <div class="col-3">
        <p>โมเดลตู้ : @header.MACHINE_MODEL</p>
    </div>
    <div class="col-3">
        <p>ตู้ @(loading ? "" : header.TYPE_METER == "2" ? "1:1" : "กลุ่ม")</p>
    </div>
    <div class="col-3">
        <p>@(header.ISONLINE == "1" ? "ออนไลน์" : "ออฟไลน์")</p>
    </div>
    <div class="col-3">
        <p>วันที่ : @Item.ChangeDate</p>
    </div>
</div>
<div id="table-scroll" class="table-scroll mb-2">

    @if (header.TYPE_METER == "2")
    {
        <table class="table table-hover table-sm">
            <thead>
                <tr>
                    <th style="font-size: 12px;width:100px;">ช่องสินค้า</th>
                    <th style="font-size: 12px;">ประเภทกลุ่มสินค้า</th>
                    <th style="font-size: 12px;">ชื่อสินค้า</th>
                    <th style="font-size: 12px;width:100px;">ยอดโหลด</th>
                    <th style="font-size: 12px;width:100px;">ยอดขายเฉลี่ย</th>
                    <th style="font-size: 12px;width:100px;">ราคากลาง</th>
                    <th style="font-size: 12px;width:100px;">ราคาขาย</th>
                    <th style="font-size: 12px;width:100px;">ราคาเรียกเก็บ</th>
                    <th style="font-size: 12px;width:100px;">ราคาตามสัญญา</th>
                    <th style="font-size: 12px;width:200px;" colspan="3">command</th>
                </tr>
            </thead>
            <tbody>
                @if (!loading)
                {
                    @foreach (var (i, idx) in detail.WithIndex())
                    {
                        var text = SelectRowEdit == idx ? "Save" : "Edit";
                        <tr class=@(i.IsAddSlot && !i.STATUSCHANGE ? "table-success" : i.IsSubRow ? "table-secondary text-close" : "")>
                            <td class="text-end" style="font-size: 12px;">
                                @(i.SLOT_NO == 0 ? "" : i.SLOT_NO)
                            </td>

                            @if (SelectRowEdit == idx)
                            {
                                <td>
                                    <div style="width:150px;">
                                        <RadzenDropDown class="dropdown-sm fw-bold"
                                                        TValue="string"
                                                        Data=@product
                                                        TextProperty="RAWPRODUCTNAME"
                                                        ValueProperty="RAWPRODUCTCODE"
                                        @bind-Value=@i.RAWPRODUCTCODE />
                                    </div>
                                </td>
                                <td>
                                    <div style="width:350px;">
                                        <DropDownProductDt index="@idx"
                                                           ItemModal="@Item"
                                                           RawProductCode="@i.RAWPRODUCTCODE"
                                                           ProductCode="@i.PRODUCT_CODE"
                                                           SelectDetailCallback="@((args) => SelectDetail(args.Item1 , args.Item2 ))" />
                                    </div>
                                </td>
                                <td class="text-end" style="font-size: 12px;width:100px;">

                                    <RadzenNumeric class="text-size"
                                                   ShowUpDown="false"
                                                   TextAlign="TextAlign.End"
                                                   TValue="int"
                                    @bind-Value=@i.LOADIN />
                                </td>
                            }
                            else
                            {
                                var rawProductName = product.FirstOrDefault(x => x.RAWPRODUCTCODE == i.RAWPRODUCTCODE);
                                <td>
                                    <div style="width:150px;font-size: 12px;">
                                        @rawProductName!.RAWPRODUCTNAME
                                    </div>
                                </td>
                                <td>
                                    <div style="width:350px;font-size: 12px;">
                                        @i.PRODUCT_NAME
                                    </div>
                                </td>
                                <td>
                                    <div class="text-end" style="font-size: 12px;">
                                        @i.LOADIN
                                    </div>
                                </td>
                            }
                            <td class="text-end" style="font-size: 12px;width:100px;">@i.SALETOTAL</td>
                            <td class="text-end" style="font-size: 12px;width:100px;">@i.SALEPRICE</td>

                            <td class="text-end" style="font-size: 12px;width:100px;">
                                @if (SelectRowEdit == idx)
                                {
                                    <RadzenNumeric class="text-size"
                                                   ShowUpDown="false"
                                                   TextAlign="TextAlign.End"
                                                   TValue="int"
                                    @bind-Value=@i.SLOT_REALPRICE />
                                }
                                else
                                {
                                    @i.SLOT_REALPRICE
                                }
                            </td>

                            <td style="font-size: 12px;width:100px;"></td>
                            <td style="font-size: 12px;width:100px;"></td>


                            @if (!i.IsAddSlot && i.STATUSCHANGE)
                            {
                                <td>
                                    <div style="width:100px;"></div>
                                </td>
                                <td>
                                    <div style="width:30px;"></div>
                                </td>
                                <td>
                                    <div style="width:30px;"></div>
                                </td>
                            }
                            else
                            {
                                <td class="text-center" style="font-size: 12px;">
                                    <div class="d-flex justify-content-around" style="width:100px;">
                                        <RadzenButton Click="()=>ChangeProduct(idx , i)"
                                                      Text="change"
                                                      ButtonStyle="ButtonStyle.Secondary"
                                                      Size="ButtonSize.ExtraSmall"
                                                      Style="text-transform: none;"
                                                      Disabled=@(!i.SLOTSTATUS || i.IsSubRow) />
                                        @if (SelectRowEdit == null || SelectRowEdit == idx)
                                        {
                                            <RadzenButton Click="()=> SelectRow(idx)"
                                                          Text=@text
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Size="ButtonSize.ExtraSmall"
                                                          Style="text-transform: none;"
                                                          Disabled=@(!i.SLOTSTATUS || i.IsSubRow) />
                                        }

                                    </div>
                                </td>
                                <td class="text-center" style="font-size: 12px;">
                                    <div style="width:30px;">
                                        @if (idx < detail.Count() - 1 && detail[idx + 1].SLOT_NO - i.SLOT_NO > 1 && !i.IsSubRow || i.STATUSCHANGE)
                                        {
                                            <RadzenButton Click="()=> AddSlot(idx, i)"
                                                          Icon="add"
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Size="ButtonSize.ExtraSmall"
                                                          Disabled=@(!i.SLOTSTATUS || i.IsSubRow) />
                                        }
                                    </div>
                                </td>
                                <td style="font-size: 12px;">
                                    @if (i.IsAddSlot)
                                    {
                                        <RadzenButton Click="()=> DeleteRow(idx)"
                                                      Text="del"
                                                      Shade="Shade.Lighter"
                                                      ButtonStyle="ButtonStyle.Danger "
                                                      Size="ButtonSize.ExtraSmall"
                                                      Style="text-transform: none;" />
                                    }
                                    else
                                    {
                                        <RadzenButton Click="()=> OffRow(idx , i.IsAddSlot)"
                                                      Text=@(i.SLOTSTATUS ? "off" : "on")
                                                      ButtonStyle=@(i.SLOTSTATUS ? ButtonStyle.Danger : ButtonStyle.Success)
                                                      Size="ButtonSize.ExtraSmall"
                                                      Style="text-transform: none;"
                                                      Disabled=@i.IsSubRow />
                                    }

                                </td>
                            }
                        </tr>
                    }
                }
                else
                {
                    <Loading />
                }

            </tbody>
        </table>
    }
    else
    {
         <table class="table table-sm">
            <thead>
                <tr>
                    <th style="font-size: 12px;width:100px;">ช่องสินค้า</th>
                    <th style="font-size: 12px;">ประเภทกลุ่มสินค้า</th>
                    <th style="font-size: 12px;">ชื่อสินค้า</th>
                    <th style="font-size: 12px;width:100px;">ยอดโหลด</th>
                    @*<th style="font-size: 12px;width:100px;">ยอดขายเฉลี่ย</th>
                     <th style="font-size: 12px;width:100px;">ราคากลาง</th>
                    <th style="font-size: 12px;width:100px;">ราคาขาย</th>
                    <th style="font-size: 12px;width:100px;">ราคาเรียกเก็บ</th>
                <th style="font-size: 12px;width:100px;">ราคาตามสัญญา</th>*@
                    <th style="font-size: 12px;width:200px;" colspan="3">command</th>
                </tr>
            </thead>
            <tbody>
                @if (!loading)
                {
                    @foreach (var i in GroupDetail())
                    {
                         <tr>
                            <td rowspan='2'>@i.SLOT_NO</td>
                            <td rowspan='2'>@i.SLOT_REALPRICE</td>
                         
                            <td>PCMB (Engg and Medical) 2015</td>
                            <td>21-09-2015</td>
                            <td rowspan='2'><button class="btn btn-primary align-middle">Login</button></td>
                         </tr>
                         <tr>
                            <td>PCMB (Engg and Medical) 2016</td>
                            <td>21-09-2016</td>
                         </tr>
                    }
                }else
                {
                    <Loading />
                }
               
            </tbody>
         </table>

    }

</div>

<RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenButton Click="()=> SaveChangeProduct(0)" Text="Save" Style="width: 80px;text-transform: none;" />
        <RadzenButton Shade="Shade.Lighter" ButtonStyle="ButtonStyle.Light" Click="()=> SaveChangeProduct(1)" Text="Cancel" Style="width: 80px;text-transform: none;" />
    </RadzenStack>
    <RadzenButton Text="Close" Click="(() => Dialog!.Close(false))" ButtonStyle="ButtonStyle.Light" Style="text-transform: none;" />
</RadzenStack>

@inject IChangeProductService ChangeProductService
@code {
    [Parameter]
    public ChangeProductRequest Item { get; set; } = new();
    [Parameter]
    public DialogService? Dialog { get; set; }

    public bool loading = false;
    public int? SelectRowEdit = null;

    ChangeProductHeader header = new();
    List<ChangeProductDetail2> detail = new();
    List<Rawproduct> product = new();

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        var body = new RawproductRequest { RawProductCode = "" };
        var res = await ChangeProductService.GetChangeProduct(Item);
        var resProduct = await ChangeProductService.GetRawproduct(body);

        header = res.Header;
        detail = res.Detail;
        product = resProduct.Data;
        loading = false;
        StateHasChanged();
    }

    private void SelectDetail(RawproductDetail2 item, int index)
    {
        detail[index].PRODUCT_CODE = item.PRODUCTCODE;
        detail[index].PRODUCT_NAME = item.PRODUCTNAME;
        detail[index].SALETOTAL = item.SALETOTAL;
        detail[index].SALEPRICE = item.SALEPRICE;
        StateHasChanged();
    }

    private void SelectRow(int index)
    {
        if (index == SelectRowEdit)
        {
            var productChang = detail[index];
            var items = detail.Where(x => x.PRODUCT_CODE == productChang.PRODUCT_CODE && !x.IsSubRow).ToList();
            if (items.Count() != 0)
            {
                @foreach (var i in items)
                {
                    var idx = detail.FindIndex(x => x.SLOT_NO == i.SLOT_NO);
                    detail[idx].SLOT_REALPRICE = productChang.SLOT_REALPRICE;
                }
            }

            SelectRowEdit = null;
            StateHasChanged();
        } 
        else
        {
            SelectRowEdit = index;
        }
    }

    private void AddSlot(int index, ChangeProductDetail2 item)
    {

        var row = new ChangeProductDetail2
        {
            MACHINE_CODE = item.MACHINE_CODE,
            SLOT_NO = item.SLOT_NO + 1,
            RAWPRODUCTCODE = item.RAWPRODUCTCODE,
            PRODUCT_CODE = item.PRODUCT_CODE,
            PRODUCT_NAME = item.PRODUCT_NAME,
            SLOT_INSTALLPRICE = item.SLOT_INSTALLPRICE,
            SLOT_REALPRICE = item.SLOT_REALPRICE,
            SLOT_CONTRACT_PRICE = item.SLOT_CONTRACT_PRICE,
            SLOTSTATUS = item.SLOTSTATUS,
            SALEPRICE = item.SALEPRICE,
            SALETOTAL = item.SALETOTAL,
            STATUSCHANGE = item.STATUSCHANGE,
            IsAddSlot = true,
            IsSubRow = item.IsSubRow
        };
        detail.Insert(index + 1, row);
        StateHasChanged();
    }

    private void OffRow(int index , bool isAddSlot)
    {
        if (!isAddSlot)
        {
            detail[index].SLOTSTATUS = !detail[index].SLOTSTATUS;
        }else
        {
            detail.Remove(detail[index]);
        }

        StateHasChanged();
    }

    private void ChangeProduct(int index, ChangeProductDetail2 item)
    {
        var row = new ChangeProductDetail2
        {
            MACHINE_CODE = item.MACHINE_CODE,
            SLOT_NO = item.SLOT_NO,
            RAWPRODUCTCODE = item.RAWPRODUCTCODE,
            PRODUCT_CODE = item.PRODUCT_CODE,
            PRODUCT_NAME = item.PRODUCT_NAME,
            SALETOTAL = item.SALETOTAL,
            SLOT_INSTALLPRICE = item.SLOT_INSTALLPRICE,
            SLOT_REALPRICE = item.SLOT_REALPRICE,
            SLOT_CONTRACT_PRICE = item.SLOT_CONTRACT_PRICE,
            SLOTSTATUS = item.SLOTSTATUS,
            SALEPRICE = item.SALEPRICE,
            STATUSCHANGE = true,
            IsAddSlot = true,
            IsSubRow = false
        };

        item.IsSubRow = true;
        item.STATUSCHANGE = true;
        detail.Insert(index + 1, row);
        SelectRowEdit = index + 1;
        StateHasChanged();
    }

    private void DeleteRow(int index)
    {
        detail.Remove(detail[index]);
        StateHasChanged();
    }

    private async Task SaveChangeProduct(int cancel)
    {
        var data = new SaveChangeProductRequest
        {
            ORG = Item.ORG,
            Location = Item.Location,
            Machine = Item.Machine,
            ChangeDate = Item.ChangeDate,
            Cancel = cancel.ToString(),
            Data = detail.Select(x => ConvertModel.SaveChangeProductDataModel(x)).ToList() 
        };

        var res = await ChangeProductService.SaveChangeProduct(data);
    }

    private List<ChangeProductGroup> GroupDetail()
    {
        var data = detail.GroupBy(x => new { x.SLOT_NO, x.SLOT_REALPRICE })
                        .Select(g => new ChangeProductGroup
                        {
                            SLOT_NO = g.Key.SLOT_NO.ToString() , 
                            SLOT_REALPRICE = g.Key.SLOT_REALPRICE.ToString(),
                            Products = g.ToList()
                        }).ToList();
        return data;

    }
}
