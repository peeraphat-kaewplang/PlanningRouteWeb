 
<RadzenDropDown 
    @ref=@radzenDropDown
    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
    FilterOperator="StringFilterOperator.StartsWith" 
    AllowFiltering="true"
    class="fw-bold"
    Style="width:74%;"
    TValue="string"
    TextProperty="PRODUCTNAME"
    ValueProperty="PRODUCTCODE" 
    @bind-Value=@ProductCode
    Data=@options
    Change="@(args => SelectProduct(args))" 
    />

@inject IChangeProductService ChangeProductService
@code {
    [Parameter]
    public string RawProductCode { get; set; } = string.Empty;
    [Parameter]
    public string ProductCode { get; set; } = string.Empty;
    // [Parameter]
    // public int index { get; set; }
    [Parameter]
    public ChangeProductRequest ItemModal { get; set; } = new();

    [Parameter]
    public EventCallback<RawproductDetail2> SelectProductCallback { get; set; }

    public List<RawproductDetail2> options = new();

    public string _rawProductCode { get; set; } = string.Empty;

    RadzenDropDown<string>? radzenDropDown;

    protected override async Task OnInitializedAsync()
    {
        options = await LoadProductDetail();
        _rawProductCode = RawProductCode;

    }

    protected override async Task OnParametersSetAsync()
    {
        if (_rawProductCode != RawProductCode)
            options = await LoadProductDetail();
        StateHasChanged();
    }

    private async Task<List<RawproductDetail2>> LoadProductDetail()
    {
        var body = new RawproductDetail2Request { 
            RawProductCode = RawProductCode, 
            ORG = ItemModal.ORG ,
            Location = ItemModal.Location ,
            Machine = ItemModal.Machine };
        var res = await ChangeProductService.GetRawproductDetail2(body);

        return res.Data;
    }

    async Task SelectProduct(object args)
    {
        var item = options.Find(x => x.PRODUCTCODE == $"{args}");
        await SelectProductCallback.InvokeAsync(item);
    }

    // private async Task Change(object args)
    // {
    //     var item = options.Find(x => x.PRODUCTCODE == $"{args}");
    //     await SelectDetailCallback.InvokeAsync((item!, index));
    // }
}
